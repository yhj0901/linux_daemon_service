# Backend 설정
backend:
  url: "http://docker-analysis-api-dev-alb-869797069.ap-northeast-2.elb.amazonaws.com/api"  # Backend 서버 URL
  timeout: 30                       # API 요청 타임아웃 (초)
  retryCnt: 3                       # API 요청 재시도 횟수

# RabbitMQ 설정
rabbitmq:
  url: "${RABBITMQ_URL:-amqp://guest:guest@localhost:5672/}"  # 환경 변수 또는 기본값 사용
  exchange: "${RABBITMQ_EXCHANGE:-image_analysis}"            # 환경 변수 또는 기본값 사용
  
  # 요청/응답 큐 설정
  requestQueue: "${RABBITMQ_REQUEST_QUEUE:-image_analysis_requests}"     # 도커 이미지 분석 요청을 받는 큐
  requestRoutingKey: "${RABBITMQ_REQUEST_ROUTING_KEY:-analysis.requests}" # 요청 라우팅 키
  
  resultQueue: "${RABBITMQ_RESULT_QUEUE:-image_analysis_results}"         # 분석 결과를 전송할 큐
  resultRoutingKey: "${RABBITMQ_RESULT_ROUTING_KEY:-analysis.results}"    # 결과 라우팅 키

# 로깅 설정
logging:
  level: "info"
  file: "/var/log/linux_daemon_service.log"
  maxSize: 100    # MB
  maxBackups: 3
  maxAge: 7       # 일

# 모니터링 설정
monitoring:
  enabled: true
  metricsPort: 9090
  endpoint: "/metrics"
  process:
    name: "trivy"                   # 모니터링할 프로세스 이름
    cpuLimit: 80.0                  # CPU 사용량 제한 (%)
    memoryLimit: 1024              # 메모리 사용량 제한 (MB)
    timeout: 300                   # 프로세스 실행 타임아웃 (초)
    checkInterval: 5               # 모니터링 체크 간격 (초) 